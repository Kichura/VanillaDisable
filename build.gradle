plugins {
    id "org.jetbrains.gradle.plugin.idea-ext" version "1.+"
}

subprojects {
    apply plugin: 'java'
    java.toolchain.languageVersion = JavaLanguageVersion.of(21)
    jar {
        from(rootProject.file("LICENSE"))
        manifest {
            attributes([
                    'Specification-Title'     : mod_name,
                    'Specification-Vendor'    : mod_author,
                    'Specification-Version'   : mod_version,
                    'Implementation-Title'    : mod_name,
                    'Implementation-Version'  : mod_version,
                    'Implementation-Vendor'   : mod_author,
                    'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                    'Timestamp'               : System.currentTimeMillis(),
                    'Built-On-Java'           : "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})",
                    'Built-On-Minecraft'      : minecraft_version
            ])
        }
    }
    tasks.withType(JavaCompile).configureEach {
        it.options.encoding = 'UTF-8'
        it.options.getRelease().set(21)
    }
    processResources {
        def expandProps = [
                "mod_version"                  : mod_version,
                "minecraft_version"            : minecraft_version,
                "minecraft_version_range"      : minecraft_version_range,
                "mod_name"                     : mod_name,
                "mod_author"                   : mod_author,
                "mod_id"                       : mod_id,
                "license"                      : license,
                "mod_description"              : mod_description,
                "neoforge_version"             : neoforge_version,
                "neoforge_loader_version_range": neoforge_loader_version_range,
                "credits"                      : credits
        ]

        filesMatching(['pack.mcmeta', 'fabric.mod.json', 'META-INF/neoforge.mods.toml', '*.mixins.json']) {
            expand expandProps
        }
        inputs.properties(expandProps)
    }
}
