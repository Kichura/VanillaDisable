{
  "required": true,
  "minVersion": "0.8.5",
  "package": "uk.debb.vanilla_disable.mixin",
  "plugin": "uk.debb.vanilla_disable.mixin.plugin.VanillaDisableMixinPlugin",
  "refmap": "${mod_id}.refmap.json",
  "compatibilityLevel": "JAVA_21",
  "mixins": [
    "feature.advancement.MixinPlayerAdvancements",
    "feature.block.command.MixinFillCommand",
    "feature.block.command.MixinSetBlockCommand",
    "feature.block.container.MixinChestBlock",
    "feature.block.container.MixinEnderChestBlock",
    "feature.block.container.MixinShulkerBoxBlock",
    "feature.block.experience.MixinAbstractFurnaceBlockEntity",
    "feature.block.experience.MixinBlock",
    "feature.block.experience.MixinGrindstoneMenu",
    "feature.block.falling.MixinFallingBlock",
    "feature.block.falling.MixinPointedDripstoneBlock",
    "feature.block.fluid.MixinLavaFluid",
    "feature.block.fluid.MixinWaterFluid",
    "feature.block.function.MixinBeaconBlockEntity",
    "feature.block.function.MixinBlockStateBase",
    "feature.block.function.MixinConduitBlockEntity",
    "feature.block.function.MixinDispenserBlock",
    "feature.block.function.MixinDropperBlock",
    "feature.block.function.MixinEntity",
    "feature.block.function.MixinPistonBaseBlock",
    "feature.block.function.MixinRedstoneWireBlock",
    "feature.block.function.MixinSculkSensorBlock",
    "feature.block.interaction.MixinBlockStateBase",
    "feature.block.interaction.MixinItemStack",
    "feature.block.other.MixinBlock",
    "feature.block.other.MixinBlockStateBase",
    "feature.block.other.MixinCauldronBlock",
    "feature.block.other.MixinEntity",
    "feature.block.other.MixinFarmBlock",
    "feature.block.other.MixinFireBlock",
    "feature.block.other.MixinServerPlayerGameMode",
    "feature.block.piston.MixinBlockStateBase",
    "feature.block.piston.MixinPistonBaseBlock",
    "feature.block.placement.MixinItemStack",
    "feature.block.redstone_timings.MixinButtonBlock",
    "feature.block.redstone_timings.MixinComparatorBlock",
    "feature.block.redstone_timings.MixinObserverBlock",
    "feature.block.redstone_timings.MixinRepeaterBlock",
    "feature.command.MixinCommands",
    "feature.enchantment.MixinBlock",
    "feature.enchantment.MixinEnchantment",
    "feature.enchantment.MixinEnchantmentHelper",
    "feature.entity.breeding.MixinBreedGoal",
    "feature.entity.breeding.MixinTemptGoal",
    "feature.entity.breeding.MixinVillager",
    "feature.entity.breeding.MultipleMixinFood",
    "feature.entity.conversions.MixinAbstractPiglin",
    "feature.entity.conversions.MixinHoglin",
    "feature.entity.conversions.MixinSkeleton",
    "feature.entity.conversions.MixinVillager",
    "feature.entity.conversions.MixinZombie",
    "feature.entity.conversions.MultipleMixinUnderwaterConversion",
    "feature.entity.experience.MixinEnderDragon",
    "feature.entity.experience.MixinLivingEntity",
    "feature.entity.experience.MixinThrownExperienceBottle",
    "feature.entity.knockback.MixinLivingEntity",
    "feature.entity.knockback.MixinServerCommonPacketListenerImpl",
    "feature.entity.other.MixinDragonStrafePlayerPhase",
    "feature.entity.other.MixinEntity",
    "feature.entity.other.MixinLivingEntity",
    "feature.entity.other.MixinMob",
    "feature.entity.other.MixinPainting",
    "feature.entity.other.MixinPlayer",
    "feature.entity.other.MixinServerPlayer",
    "feature.entity.other.MixinSummonCommand",
    "feature.entity.other.MixinVillagerData",
    "feature.entity.other.MixinZombieVillager",
    "feature.entity.player.MixinAbilities",
    "feature.entity.player.MixinEntity",
    "feature.entity.player.hunger.MixinCakeBlock",
    "feature.entity.player.hunger.MixinFoodData",
    "feature.entity.player.hunger.MixinFoodProperties",
    "feature.entity.player.hunger.MixinItem",
    "feature.entity.player.hunger.MixinPlayer",
    "feature.entity.spawning.MixinBaseSpawner",
    "feature.entity.spawning.MixinItemEntity",
    "feature.entity.spawning.MixinSpawnEggItem",
    "feature.entity.spawning.MixinThrownEnderpearl",
    "feature.entity.spawning.despawning.MixinMob",
    "feature.entity.spawning.despawning.MixinNaturalSpawner",
    "feature.entity.spawning.spawn_limits.MixinMob",
    "feature.entity.spawning.spawn_limits.MixinNaturalSpawner",
    "feature.entity.spawning.spawning.MixinCatSpawner",
    "feature.entity.spawning.spawning.MixinNaturalSpawner",
    "feature.entity.spawning.spawning.MixinVillager",
    "feature.entity.trading.MixinAbstractVillager",
    "feature.entity.trading.MixinPiglinAi",
    "feature.entity.trading.MixinVillager",
    "feature.item.creative_breaking.MixinItem",
    "feature.item.creative_breaking.MixinSwordItem",
    "feature.item.food.MixinCakeBlock",
    "feature.item.food.MixinFoodProperties",
    "feature.item.function.MixinItemStack",
    "feature.item.function.MixinLivingEntity",
    "feature.item.function.MixinSpectralArrow",
    "feature.item.other.MixinAbstractCauldronBlock",
    "feature.item.other.MixinDispenserBlock",
    "feature.item.other.MixinFuelValues",
    "feature.item.other.MixinGiveCommand",
    "feature.item.other.MixinItemStack",
    "feature.item.potion.MixinArrow",
    "feature.item.potion.MixinPotionContents",
    "feature.item.potion.MixinThrownPotion",
    "feature.item.spam.MixinBowItem",
    "feature.item.spam.MixinCrossbowItem",
    "feature.misc.MixinRaid",
    "feature.misc.MixinServerRecipeBook",
    "feature.mob_category.MixinMobCategory",
    "feature.worldgen.biome.MixinBiomeManager",
    "feature.worldgen.biome.MixinBiomeSource",
    "feature.worldgen.biome.MixinChunkAccess",
    "feature.worldgen.biome.MultipleMixinBiomeSource",
    "feature.worldgen.feature.MixinBiomeGenerationSettings",
    "feature.worldgen.feature.MixinEndPlatformFeature",
    "feature.worldgen.feature.MixinEndSpike",
    "feature.worldgen.structure.MixinStructureCheck",
    "feature.worldgen.structure.MixinStructureManager",
    "util.MixinCommands",
    "util.MixinCreateWorldScreenMoreTab",
    "util.MixinGameRules",
    "util.MixinKeyboardHandler",
    "util.MixinMinecraft",
    "util.MixinMinecraftServer",
    "util.MixinPlayerList"
  ],
  "client": [
    "util.MixinCreateWorldScreen"
  ],
  "injectors": {
    "defaultRequire": 1
  }
}
